import cmath
from PIL import Image, ImageDraw
import numpy as np
import math
# import matplotlib.pyplot as plt



# s = open("points.txt", "r").read().split("\n")

# temp = []

# for i in s:
# 	# temp.append()
# 	x,y = map(eval, [i.split(" ")[3],i.split(" ")[6]])
# 	temp.append((int(x), int(y)))

# for i in temp:
#     print("(%s:+%s)"%i,end=",")


# points = []
# edges = []

# for i in range(len(temp)-1):
# 	edges.append([temp[i],temp[i+1]])

# edges.append([temp[0],temp[-1]])

# for (x,y) in temp:
#     points.append(complex(x,y))

# numpoint = len(points)

# def Distance(point0, point1):
#     return abs(point1-point0)

# total_Distance = Distance(points[0],points[-1])

# for i in range(len(points)-1):
#     total_Distance += Distance(points[i],points[i+1])

# def midpoint(edge):
#     p0,p1 = edge[0],edge[1]
#     return complex((p1[0]+p0[0])/2,(p1[1]+p0[1])/2)


# def fourierN(n): 
#     sum = 0
#     AccumDist = 0 #im not sure.. choose between line 46 and line 48
#     for edge in edges:
#         Dis = Distance(complex(edge[0][0], edge[0][1]),complex(edge[1][0],edge[1][1]))
#         AccumDist += 1
#         sum += (midpoint(edge) * cmath.exp(-2*cmath.pi*n*complex(0,1)*(AccumDist/numpoint)) * (1/numpoint))
#     return sum


# vectors = []

# for n in range(-100,100):
#     num = fourierN(n)
#     # print(num)
#     vectors.append((n,num))

# ##################################################################

# print(vectors)
# quit()
# power = 5

# final_points = []

# for t in range(0,10**power):
#     t /= 10**(power)
#     p = 0
#     for n,c in vectors:
#         p += c * cmath.exp(-2*cmath.pi*n*complex(0,1)*t)
#     final_points.append(p)

# print(final_points)

final_points = [(40.8591210678678,587.2107205160247),(60.40135735929179,656.6437804298715),(114.13167702250897,654.8057735741315),(159.25443511557017,587.2491119703005),(163.36417608293888,510.61627190795855),(137.71408843710157,475.39000081153887),(126.27550866672023,484.7620579216372),(157.43134763830733,508.01282997113515),(212.2665774519717,522.8161870083051),(247.52616357477112,534.5943667488671),(246.62129326473325,557.5965532710089),(237.47459369491676,589.9627323052352),(256.29853095483554,615.1863603542776),(302.65218306290495,622.4911111182023),(340.72394995761186,615.4924671377807),(343.4664477981347,600.2489877285025),(324.173893805071,575.3890286031177),(318.6625407887216,542.2081272746451),(343.70520354661124,518.9286482882682),(383.3904770033002,530.9748708511975),(415.0342748032634,580.1615552035944),(436.11212648508143,630.3085458202289),(457.93897165399613,634.908376231374),(479.9236501988847,582.8973458312486),(483.3291919264648,512.2306097020769),(453.88085171566473,473.8621791141254),(401.5762586183633,483.9769003744585),(350.01689453683076,514.3345990614392),(309.4968174937745,526.1137494338869),(269.6662387304336,505.9558063118702),(220.05459558883547,467.5264398726871),(168.89182784608786,426.55948999956235),(134.21648562093225,384.9636236039864),(120.23889166629532,340.37521875717),(112.26419229783158,301.99941214164215),(97.61591709340344,288.01667313033374),(83.8400759520126,307.16949157453405),(88.53300518807221,348.37872419658447),(113.29774044070705,390.6714099130709),(136.21237212598396,419.7137019840305),(133.75281188899098,431.7740951076127),(105.65309738881518,425.41784903810014),(73.30145739759018,396.91208930522737),(55.905816232862726,346.608762782754),(54.277889558606276,285.0378678428449),(58.901995846483885,226.5013993359521),(67.73538537379295,176.2363562149151),(90.47780218531287,128.65436064286135),(136.65066909146458,81.2489877189282),(204.16498092791207,47.113744324979514),(280.04772976811444,47.48898497833406),(348.12617515721183,88.63966207395138),(394.2452405192511,147.90856153799632),(408.97084222155246,186.83181181647805),(391.81796973148244,181.4729221809718),(353.53066574283076,141.89879902231192),(309.45906502397276,103.05004107141869),(267.88506660135585,96.38238251529968),(227.34246249066328,128.06791815713896),(187.72434452321113,181.0123766414338),(160.33419984396184,235.05271337176745),(160.5620622619529,284.4650062143694),(189.93828509224738,336.9378725366866),(231.75159657767048,397.28147451349764),(269.0186361117254,454.2521595703592),(302.60601582838126,485.73150718040006),(343.79169358503526,478.6131196833517),(388.9768057554465,443.4816318664974),(411.93752371582815,407.93580362926485),(390.3109439933206,393.84105319131606),(337.3237222716796,400.7681126529621),(296.68258998463386,411.43371594280063),(300.13546786955175,411.56469484783196),(334.42490133298077,402.3102473102356),(356.64643359374224,393.9029049461039),(341.0669133382433,391.3142165476165),(304.2796743443374,389.822564892759),(283.0236982879284,383.653104997365),(294.5774983691398,374.24964251917805),(325.03177021484726,367.09592968022554),(351.54951626633766,362.4922360498372),(364.85408154940444,353.645454644821),(366.5294921001838,334.9745773888317),(354.40262029566543,309.78419804882617),(323.1481247709638,287.8009564572209),(280.14275132954333,276.3347940251497),(250.18396669821325,275.3625911341533),(255.80560811790656,279.45331433447393),(294.46058583853727,281.2378388514235),(341.11411560666954,274.07562224850363),(373.66496166886566,257.8152318228854),(390.58501880392913,246.54456731745606),(401.9752395778996,265.9701042212369),(409.4861549490287,332.1337750280832),(401.51599128085184,427.08714102038954),(366.5143642688991,502.3001519266661),(304.53965304238704,518.4445965938672),(225.1552874892792,486.8052072179731),(141.63700214342754,464.8933164049404),(72.38338837285721,501.97731549777234),(40.85912106786767,587.210720516024)]

file_name = "Don.png"

im = Image.open(file_name)

for n in range(len(final_points)-1):
    p1 = final_points[n]
    p2 = final_points[n+1]
    shape = [p1,p2]
    # create line image
    img = ImageDraw.Draw(im)  
    img.line(shape, fill="blue", width = 0)
im.show()